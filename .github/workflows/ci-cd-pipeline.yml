name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build Docker image
        run: |
          docker build -t emergencydevops/dockerlabs:latest .

      - name: Tag Docker image
        run: |
          docker tag emergencydevops/dockerlabs:latest emergencydevops/dockerlabs:${{ github.sha }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: emergencydevops/dockerlabs:latest
      
      - name: Push Docker image to Docker Hub
        run: |
          docker push emergencydevops/dockerlabs:latest
          docker push emergencydevops/dockerlabs:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Helm
        uses: azure/setup-helm@v1
      
      - name: Generate Helm chart
        run: |
          helm create dockerlabs
          sed -i 's|repository: ""|repository: emergencydevops/dockerlabs|' ./dockerlabs/values.yaml
          sed -i 's|tag: ""|tag: latest|' ./dockerlabs/values.yaml

      - name: Package Helm chart
        run: |
          helm package ./dockerlabs

      - name: Log in to EKS Cluster
        run: |
          aws eks update-kubeconfig --name EKS_CLOUD --region ap-south-1

      - name: Deploy to EKS with Helm
        run: |
          helm upgrade --install dockerlabs ./dockerlabs --namespace default

      - name: Install ArgoCD
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
          kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/ha/install.yaml
          kubectl port-forward svc/argocd-server -n argocd 8080:443 &
          kubectl apply -n argocd -f application.yaml
